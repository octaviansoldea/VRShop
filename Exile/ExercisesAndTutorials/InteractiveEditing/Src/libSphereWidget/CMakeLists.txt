PROJECT(libSphereWidget)

FIND_PACKAGE(VTK)
#IF(NOT VTK_DIR)
#  MESSAGE(FATAL_ERROR "Please set VTK_DIR.")
#ENDIF(NOT VTK_DIR)
#INCLUDE(${VTK_USE_FILE})


# Find VTK.
FIND_PACKAGE(VTK REQUIRED)
IF(VTK_USE_FILE)
  INCLUDE(${VTK_USE_FILE})
ENDIF(VTK_USE_FILE)

# use what QVTK built with
SET(QT_QMAKE_EXECUTABLE ${VTK_QT_QMAKE_EXECUTABLE} CACHE FILEPATH "")
SET(QT_MOC_EXECUTABLE ${VTK_QT_MOC_EXECUTABLE} CACHE FILEPATH "")
SET(QT_UIC_EXECUTABLE ${VTK_QT_UIC_EXECUTABLE} CACHE FILEPATH "")
SET(DESIRED_QT_VERSION ${VTK_DESIRED_QT_VERSION} CACHE FILEPATH "")
FIND_PACKAGE(Qt)
IF(QT_USE_FILE)
  INCLUDE(${QT_USE_FILE})
ELSE(QT_USE_FILE)
  SET(QT_LIBRARIES   ${QT_QT_LIBRARY})
ENDIF(QT_USE_FILE)


INCLUDE_DIRECTORIES(
	 ${QT_INCLUDE_DIR}
	 ${CMAKE_CURRENT_BINARY_DIR}
     ${CMAKE_CURRENT_SOURCE_DIR}
     ${CMAKE_CURRENT_SOURCE_DIR}/../libSelectTwoPointsGUI/
     ${CMAKE_CURRENT_BINARY_DIR}/../libSelectTwoPointsGUI/
     ${CMAKE_CURRENT_SOURCE_DIR}/../libArrowSourceStartEnd
     ${CMAKE_CURRENT_SOURCE_DIR}/../libCommon
)

LINK_DIRECTORIES(
	${CMAKE_CURRENT_BINARY_DIR}/../libSelectTwoPointsGUI
    ${CMAKE_CURRENT_BINARY_DIR}/../libArrowSourceStartEnd
    ${CMAKE_CURRENT_BINARY_DIR}/../libCommon
)

SET(SRCS
	SphereWidget.h SphereWidget.cpp
)

ADD_LIBRARY(libSphereWidget ${SRCS} ${UI_SRCS})

INSTALL(TARGETS libSphereWidget DESTINATION lib)
INSTALL(FILES SphereWidget.h DESTINATION include)


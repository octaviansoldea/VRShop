CMAKE_MINIMUM_REQUIRED( VERSION 2.8.9 )
PROJECT( QtOSG )

CMAKE_MINIMUM_REQUIRED(VERSION 2.8)

SET_PROPERTY(GLOBAL PROPERTY USE_FOLDERS ON)

SET(CMAKE_DEBUG_POSTFIX "D")

FIND_PACKAGE(OpenSceneGraph 
	REQUIRED osg osgAnimation osgDB osgGA osgQt osgUtil osgViewer OpenThreads
)


#SET( CMAKE_CXX_FLAGS "-Wall -pedantic -Wno-long-long" )

SET( CMAKE_INCLUDE_CURRENT_DIR ON )
SET( CMAKE_AUTOMOC ON )

#FIND_PACKAGE( Qt4 REQUIRED QtCore QtGui QtOpenGL)
#FIND_PACKAGE( OpenSceneGraph REQUIRED COMPONENTS osgViewer osgGA )
#INCLUDE( ${QT_USE_FILE} )
#INCLUDE_DIRECTORIES( ${OPENSCENEGRAPH_INCLUDE_DIRS} )

FIND_PACKAGE(Qt5Core)
IF(Qt5Core_FOUND)
  SET(Qt5_FOUND TRUE)
  FIND_PACKAGE(Qt5Core)
  FIND_PACKAGE(Qt5Gui)
  FIND_PACKAGE(Qt5Widgets)
  FIND_PACKAGE(Qt5OpenGL)
  FIND_PACKAGE(Qt5Sql)
  FIND_PACKAGE(Qt5Network)
ELSE(Qt5Core_FOUND)
  FIND_PACKAGE(Qt4 REQUIRED)
  SET(Qt4_FOUND TRUE)
ENDIF(Qt5Core_FOUND)

IF(Qt5_FOUND)
  INCLUDE_DIRECTORIES(
    ${Qt5Core_INCLUDE_DIRS}
    ${Qt5Gui_INCLUDE_DIRS}
    ${Qt5Widgets_INCLUDE_DIRS}
    ${Qt5Sql_INCLUDE_DIRS}
    ${Qt5Network_INCLUDE_DIRS}
	${Qt5OpenGL_INCLUDE_DIRS}
  )
ELSE(Qt5_FOUND)
  #Assume Qt4_FOUND, if we are here
  IF(QT_USE_FILE)
    INCLUDE(${QT_USE_FILE})
  ELSE(QT_USE_FILE)
    SET(QT_LIBRARIES   ${QT_QT_LIBRARY})
  ENDIF(QT_USE_FILE)

  INCLUDE_DIRECTORIES(
       ${QT_INCLUDE_DIR}
	   ${QT_QTSQL_INCLUDE_DIR}
  )
ENDIF(Qt5_FOUND)

INCLUDE_DIRECTORIES(
  ${OPENSCENEGRAPH_INCLUDE_DIRS}
)

SET( SOURCES
  MainWindow.cpp
  QtOSG.cpp
  OSGWidget.cpp
)

ADD_EXECUTABLE( qtosg ${SOURCES} )

SET(LIBS_COMMON 
	${OSG_LIBRARIES}
	${OSGANIMATION_LIBRARIES}
	${OSGDB_LIBRARIES}
	${OSGGA_LIBRARIES}
	${OSGQT_LIBRARIES}
	${OSGUTIL_LIBRARIES}
	${OSGVIEWER_LIBRARIES}
	${OPENTHREADS_LIBRARIES}
)

TARGET_LINK_LIBRARIES( qtosg
  ${OPENSCENEGRAPH_LIBRARIES}
  ${QT_LIBRARIES}
)

IF(Qt5_FOUND)
  TARGET_LINK_LIBRARIES(qtosg
    ${Qt5Core_LIBRARIES}
    ${Qt5Gui_LIBRARIES}
    ${Qt5Widgets_LIBRARIES}
    ${Qt5Sql_LIBRARIES}
    ${Qt5Network_LIBRARIES}
	${Qt5OpenGL_LIBRARIES}
	${LIBS_COMMON}
  )
ELSEIF(NOT Qt5_FOUND AND Qt4_FOUND)
  TARGET_LINK_LIBRARIES(Test_libShoppingPlace
    ${QT_LIBRARIES}
    ${QT_QTSQL_LIBRARY}
	${LIBS_COMMON}
  )
ENDIF()